var b = Math.pow(b, (b * 0xAB) + (b + 0xB) * Math.PI); var _0b = Math.pow(Math.round(b), (b * 0xAB) + (b + 0xAB) * Math.PI); var _0c = Math.pow(Math.round(_0b), (b * 0xAB) + (_0b + 0xAB) * Math.PI); var _0c = Math.pow(Math.round(_0b), (b * 0xAB) + (_0b + 0xAB) * Math.PI); var _03 = Math.pow(Math.round(_0c), (b * 0xAB) + (_0b + 0xAB) * Math.PI); console.error("JS Obfuscated by BresoDEV"); function msgbox(titulo, texto, tempo = 1000, layout = 0, corFundo = 'green', corfonte = 'aliceblue', borderradius = true, textoCentralizado = false) {
    b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = b + Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = b + Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = b + Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); /*BresoDEV*/
    var topo = 10; b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/
    var opacidade = 0.0; b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/
    const rect = document.createElement('div'); b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/
    rect.style.position = 'fixed'; b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/
    rect.style.zIndex = '10000'; b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/
    rect.style.minWidth = '25%'; b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/
    rect.style.maxWidth = '50%'; b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/

    //rect.style.height = '100px';b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/
    if (borderradius) {
        b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = b + Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = b + Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = b + Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); /*BresoDEV*/
        rect.style.borderRadius = '10px'; b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/
    }
    rect.style.backgroundColor = corFundo; b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/

    switch (layout) {
        case 0:
            rect.style.right = '10px'; b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/
            topo = 10; b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/
            rect.style.top = topo + 'px'; b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/
            if (textoCentralizado) { b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = b + Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = b + Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = b + Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); /*BresoDEV*/ rect.style.textAlign = 'center'; b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/ }
            else { b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = b + Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = b + Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = b + Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); /*BresoDEV*/ rect.style.textAlign = 'right'; b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/ }
            break; b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/
        case 1:
            rect.style.left = '10px'; b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/
            topo = 10; b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/
            rect.style.top = topo + 'px'; b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/
            if (textoCentralizado) { b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = b + Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = b + Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = b + Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); /*BresoDEV*/ rect.style.textAlign = 'center'; b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/ }
            else { b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = b + Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = b + Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = b + Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); /*BresoDEV*/ rect.style.textAlign = 'left'; b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/ }
            break; b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/
        case 2:
            rect.style.left = '10px'; b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/
            topo = 10; b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/
            rect.style.bottom = topo + 'px'; b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/
            if (textoCentralizado) { b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = b + Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = b + Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = b + Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); /*BresoDEV*/ rect.style.textAlign = 'center'; b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/ }
            else { b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = b + Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = b + Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = b + Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); /*BresoDEV*/ rect.style.textAlign = 'left'; b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/ }
            break; b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/

        case 3:
            rect.style.right = '10px'; b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/
            topo = 10; b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/
            rect.style.bottom = topo + 'px'; b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/
            if (textoCentralizado) { b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = b + Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = b + Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = b + Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); /*BresoDEV*/ rect.style.textAlign = 'center'; b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/ }
            else { b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = b + Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = b + Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = b + Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); /*BresoDEV*/ rect.style.textAlign = 'right'; b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/ }
            break; b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/
        default:
            rect.style.right = '10px'; b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/
            topo = 10; b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/
            rect.style.top = topo + 'px'; b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/
            if (textoCentralizado) { b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = b + Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = b + Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = b + Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); /*BresoDEV*/ rect.style.textAlign = 'center'; b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/ }
            else { b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = b + Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = b + Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = b + Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); /*BresoDEV*/ rect.style.textAlign = 'right'; b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/ }
            break; b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/
    }


    rect.style.padding = '10px'; b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/
    rect.style.opacity = opacidade; b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/


    const titlee = document.createElement('span'); b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/
    titlee.innerHTML = titulo; b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/
    titlee.style.color = corfonte; b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/

    const alerta = document.createElement('span'); b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/
    alerta.innerHTML = '<br>' + texto; b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/
    alerta.style.color = corfonte; b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/


    rect.appendChild(titlee); b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/
    rect.appendChild(alerta); b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/
    document.body.appendChild(rect); b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/

    var lp = setInterval((/*BresoDEV*/) => {
        b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = b + Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = b + Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = b + Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); /*BresoDEV*/
        if (opacidade <= 0.9) {
            b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = b + Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = b + Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = b + Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); /*BresoDEV*/
            opacidade += 0.002; b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/
            rect.style.opacity = opacidade; b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/
        }
        else {
            b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = b + Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = b + Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = b + Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); /*BresoDEV*/
            clearInterval(lp); b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/
            setTimeout((/*BresoDEV*/) => {
                b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = b + Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = b + Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = b + Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); /*BresoDEV*/
                var loop = setInterval((/*BresoDEV*/) => {
                    b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = b + Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = b + Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = b + Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); /*BresoDEV*/
                    if (topo !== window.innerHeight) {
                        b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = b + Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = b + Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = b + Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); /*BresoDEV*/
                        topo++; b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/

                        if (layout === 0 || layout === 1) { b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = b + Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = b + Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = b + Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); /*BresoDEV*/ rect.style.top = topo + 'px'; b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/ }

                        opacidade -= 0.002; b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/
                        rect.style.opacity = opacidade; b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/
                    }
                    else {
                        b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = b + Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = b + Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0x2) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); b = (b * 0xAB) - (b + 0xAB) * Math.PI; b = b + Math.pow(b, (b * 0xAB) - (b + 0xB) * Math.PI); b = b + Math.pow(Math.round(b), (b * 0xAB) - (b + 0xAB) * Math.PI); b = b + Math.pow(b, (b * 0xAB) - (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) - (_0b + 0xAB) * Math.PI); /*BresoDEV*/

                        clearInterval(loop); b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/
                        rect.remove(/*BresoDEV*/); b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/
                    }


                }, 1); b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/
            }, tempo); b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/
        }


    }, 1); b = Math.pow(b, (b * 0xAB) / (b + 0xB) * Math.PI); _0b = Math.pow(Math.round(b), (b * 0xAB) / (b + 0xAB) * Math.PI); _0c = Math.pow(Math.round(_0b), (b * 0xAB) / (_0b + 0xAB) * Math.PI); /*BresoDEV*/

}